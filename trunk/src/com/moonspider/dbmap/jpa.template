#if ($conf.pkg != "")
package $conf.pkg;
#end

import java.util.*;
import javax.persistence.*;
#if ($conf.jaxb)
import javax.xml.bind.annotation.*;
#end

@Entity
@Table(name="$table.name")
#if ($conf.jaxb)
@XmlRootElement
@XmlAccessorType(value = javax.xml.bind.annotation.XmlAccessType.PROPERTY)
#end
public class ${table.className}
#if ($table.tableExtends) extends $table.tableExtends
#elseif ($conf.globalExtends) extends $conf.globalExtends
#end
#if ($table.tableImplements)implements $table.tableImplements
#elseif ($conf.globalImplements) implements $conf.globalImplements
#end
{
    // Columns
    
#foreach($col in $table.columns)
#if($col.xmlAnnotation)
#if ($conf.jaxb)
$col.xmlAnnotation
#end
#end
    $col.annotation
    $col.getterAccess $col.javaType get${col.fieldUpcase}() {
        return this.$col.fieldName;
    }
    ${col.setterAccess} void set${col.fieldUpcase}($col.javaType $col.fieldName) {
        this.${col.fieldName} = $col.fieldName;
    }
    private $col.javaType $col.fieldName;
    
#end

    // Relations
    
#foreach($rel in $table.relations)
    // Relation name: ${rel.name}
#if ($conf.jaxb && $rel.xmlTransient)
    @XmlTransient
#end    
    @${rel.cardinality}(
        ${rel.mappedBy}
        cascade = ${rel.cascade},
        fetch = FetchType.${rel.fetchType})
    $rel.joinColumn
    public $rel.type get${rel.method}() {
        return this.my${rel.method};
    }
    public void set${rel.method}(${rel.type} my${rel.method}) {
        this.my${rel.method} = my${rel.method};
    }
    private ${rel.type} my${rel.method};
    
#end
#if ($table.extraBody)$table.extraBody#end

    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append(this.getClass().getName() + "|");
#foreach ($col in $table.columns)
#if (!${col.xmlTransient})
        sb.append("${col.name}=" + get${col.fieldUpcase}() + "|");
#end        
#end
        
        return sb.toString();
    }
}